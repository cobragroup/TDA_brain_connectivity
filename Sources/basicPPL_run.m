clearvars;

% Manual setup of analysis
basicPPL_info;
basicPPL_init_demean_marginal;

% Compute connectivity (full/masked FC/EC)
% Needs manual setup of dataset
basicPPL_matrices;

% Different analysis setups - needed for the next step
basicPPL_settings;           

markData = 'full';           % set of datasets to analyze 
markFeatures = 'full';       % set of features to compute
load(['Service/GlobalStructure/0.Info/Settings/dataset_' markData '.mat']);
save('Service/GlobalStructure/0.Info/Settings/dataset_current.mat','dataset');
load(['Service/GlobalStructure/0.Info/Settings/feature_dim0_' markFeatures '.mat']);
save('Service/GlobalStructure/0.Info/Settings/feature_dim0_current.mat','featureSet');
load(['Service/GlobalStructure/0.Info/Settings/feature_dim1_' markFeatures '.mat']);
save('Service/GlobalStructure/0.Info/Settings/feature_dim1_current.mat','featureSet');

% Put the right path to .py file or manually run the corresponding Python
% code
basicPPL_barcodes_py;

% Read and collect barcodes from text files, generated by Python script.
basicPPL_collectBarcodes;

% Collect connectivity as a vector for every patient as feature for future classification. 
basicPPL_features_naive; 
% Calculate PH features (dimension 0) 
basicPPL_features_dim0;  
% Calculate PH features (dimension 1)
basicPPL_features_dim1;  

% Run classification for all prepared features
basicPPL_classification;
% Collect classification results to single table
basicPPL_collectResults;



